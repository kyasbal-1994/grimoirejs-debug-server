@Pass{
  @BlendFunc(ONE,ONE)
  FS_PREC(mediump,float)
  varying vec3 vNormal;
  #ifdef VS
    attribute vec3 position;
    attribute vec3 normal;
    uniform mat4 _matPVM;
    uniform float _time;
    void main(){
      gl_PointSize = 4.;
      gl_Position = _matPVM * vec4(sin(position.x*1. + _time/1000.),position.y,position.z, 1.);
      vNormal = normal;
    }
  #endif
  #ifdef FS
    @{type:"color", default:"blue"}
    uniform vec4 color;
    void main(){
      gl_FragColor = vec4(vNormal,1.);
    }
  #endif
}

@Pass{
  @BlendFunc(ONE,ONE)
  FS_PREC(mediump,float)
  varying vec3 vNormal;
  #ifdef VS
    attribute vec3 position;
    attribute vec3 normal;
    uniform mat4 _matPVM;
    uniform float _time;
    void main(){
      gl_PointSize = 4.;
      gl_Position = _matPVM * vec4(position.x,sin(position.y*1. + _time/1000.),position.z, 1.);
      vNormal = normal;
    }
  #endif
  #ifdef FS
    @{type:"color", default:"blue"}
    uniform vec4 color;
    void main(){
      gl_FragColor = vec4(vNormal,1.);
    }
  #endif
}

@Pass{
  @BlendFunc(ONE,ONE)
  FS_PREC(mediump,float)
  varying vec3 vNormal;
  #ifdef VS
    attribute vec3 position;
    attribute vec3 normal;
    uniform mat4 _matPVM;
    uniform float _time;
    void main(){
      gl_PointSize = 4.;
      gl_Position = _matPVM * vec4(position.x,position.y,sin(position.z*1. + _time/1000.), 1.);
      vNormal = normal;
    }
  #endif
  #ifdef FS
    @{type:"color", default:"blue"}
    uniform vec4 color;
    void main(){
      gl_FragColor = vec4(vNormal,1.);
    }
  #endif
}
